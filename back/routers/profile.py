from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from db import models, database
from schemas.profile import (
    UpdateProfileSchema,
    ChangePasswordSchema,
    ChangeEmailSchema,
    ChangePhoneSchema,
    ProfileResponse
)
from routers.auth import get_current_user, hash_password, verify_password
from pydantic import BaseModel

router = APIRouter(
    prefix='/profile',
    tags=['–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è']
)


# ==============================
# üìã –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
# ==============================
@router.get('/me', response_model=ProfileResponse, summary='–ü–æ–ª—É—á–∏—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
def get_my_profile(
    current_user: models.Client = Depends(get_current_user),
    db: Session = Depends(database.get_db)
):
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return {
        'id': current_user.id,
        'first_name': current_user.first_name,
        'last_name': current_user.last_name,
        'patronymic': current_user.patronymic,
        'email': current_user.email,
        'phone': current_user.phone,
        'created_at': current_user.created_at,
        'personal_info': {
            'passport_number': current_user.personal_info.passport_number if current_user.personal_info else None,
            'address': current_user.personal_info.address if current_user.personal_info else None,
            'birth_date': current_user.personal_info.birth_date if current_user.personal_info else None,
            'employment_status': current_user.personal_info.employment_status if current_user.personal_info else None
        } if current_user.personal_info else None
    }


# ==============================
# ‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è
# ==============================
@router.patch('/update', response_model=ProfileResponse, summary='–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
def update_profile(
    data: UpdateProfileSchema,
    current_user: models.Client = Depends(get_current_user),
    db: Session = Depends(database.get_db)
):
    """–û–±–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è (–∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –æ—Ç—á–µ—Å—Ç–≤–æ)"""

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—è
    if data.first_name is not None:
        current_user.first_name = data.first_name

    if data.last_name is not None:
        current_user.last_name = data.last_name

    if data.patronymic is not None:
        current_user.patronymic = data.patronymic

    db.commit()
    db.refresh(current_user)

    return {
        'id': current_user.id,
        'first_name': current_user.first_name,
        'last_name': current_user.last_name,
        'patronymic': current_user.patronymic,
        'email': current_user.email,
        'phone': current_user.phone,
        'created_at': current_user.created_at,
        'personal_info': {
            'passport_number': current_user.personal_info.passport_number if current_user.personal_info else None,
            'address': current_user.personal_info.address if current_user.personal_info else None,
            'birth_date': current_user.personal_info.birth_date if current_user.personal_info else None,
            'employment_status': current_user.personal_info.employment_status if current_user.personal_info else None
        } if current_user.personal_info else None
    }


# ==============================
# üîê –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
# ==============================
@router.post('/change-password', summary='–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å')
def change_password(
    data: ChangePasswordSchema,
    current_user: models.Client = Depends(get_current_user),
    db: Session = Depends(database.get_db)
):
    """–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å
    if not verify_password(data.current_password, current_user.hashed_password):
        raise HTTPException(
            status_code=400,
            detail='–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å'
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ
    if verify_password(data.new_password, current_user.hashed_password):
        raise HTTPException(
            status_code=400,
            detail='–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ'
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
    current_user.hashed_password = hash_password(data.new_password)
    db.commit()

    return {
        'message': '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω',
        'success': True
    }


# ==============================
# üìß –ò–∑–º–µ–Ω–∏—Ç—å email
# ==============================
@router.post('/change-email', response_model=ProfileResponse, summary='–ò–∑–º–µ–Ω–∏—Ç—å email')
def change_email(
    data: ChangeEmailSchema,
    current_user: models.Client = Depends(get_current_user),
    db: Session = Depends(database.get_db)
):
    """–ò–∑–º–µ–Ω–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    if not verify_password(data.password, current_user.hashed_password):
        raise HTTPException(
            status_code=400,
            detail='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å'
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–π email –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
    if data.new_email.lower() == current_user.email.lower():
        raise HTTPException(
            status_code=400,
            detail='–ù–æ–≤—ã–π email —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º'
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –Ω–æ–≤—ã–π email
    existing_user = db.query(models.Client).filter(
        models.Client.email == data.new_email,
        models.Client.id != current_user.id
    ).first()

    if existing_user:
        raise HTTPException(
            status_code=400,
            detail='–≠—Ç–æ—Ç email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º email
    current_user.email = data.new_email
    db.commit()
    db.refresh(current_user)

    return {
        'id': current_user.id,
        'first_name': current_user.first_name,
        'last_name': current_user.last_name,
        'patronymic': current_user.patronymic,
        'email': current_user.email,
        'phone': current_user.phone,
        'created_at': current_user.created_at,
        'personal_info': {
            'passport_number': current_user.personal_info.passport_number if current_user.personal_info else None,
            'address': current_user.personal_info.address if current_user.personal_info else None,
            'birth_date': current_user.personal_info.birth_date if current_user.personal_info else None,
            'employment_status': current_user.personal_info.employment_status if current_user.personal_info else None
        } if current_user.personal_info else None
    }


# ==============================
# üì± –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω
# ==============================
@router.post('/change-phone', response_model=ProfileResponse, summary='–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω')
def change_phone(
    data: ChangePhoneSchema,
    current_user: models.Client = Depends(get_current_user),
    db: Session = Depends(database.get_db)
):
    """–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    if not verify_password(data.password, current_user.hashed_password):
        raise HTTPException(
            status_code=400,
            detail='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å'
        )

    # –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    clean_new_phone = ''.join(filter(str.isdigit, data.new_phone))
    clean_current_phone = ''.join(filter(str.isdigit, current_user.phone))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
    if clean_new_phone == clean_current_phone:
        raise HTTPException(
            status_code=400,
            detail='–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º'
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä
    existing_user = db.query(models.Client).filter(
        models.Client.phone == data.new_phone,
        models.Client.id != current_user.id
    ).first()

    if existing_user:
        raise HTTPException(
            status_code=400,
            detail='–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
    current_user.phone = data.new_phone
    db.commit()
    db.refresh(current_user)

    return {
        'id': current_user.id,
        'first_name': current_user.first_name,
        'last_name': current_user.last_name,
        'patronymic': current_user.patronymic,
        'email': current_user.email,
        'phone': current_user.phone,
        'created_at': current_user.created_at,
        'personal_info': {
            'passport_number': current_user.personal_info.passport_number if current_user.personal_info else None,
            'address': current_user.personal_info.address if current_user.personal_info else None,
            'birth_date': current_user.personal_info.birth_date if current_user.personal_info else None,
            'employment_status': current_user.personal_info.employment_status if current_user.personal_info else None
        } if current_user.personal_info else None
    }
