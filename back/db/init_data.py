import os
from sqlalchemy.orm import Session
from db import models
from passlib.context import CryptContext
from dotenv import load_dotenv

load_dotenv()

pwd_context = CryptContext(schemes=['bcrypt'], deprecated='auto')


def hash_password(password: str):
    return pwd_context.hash(password)


def init_roles(db: Session):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –±–∞–Ω–∫–∞"""
    roles_data = [
        {"name": "SuperAdmin"},      # üÜï –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤ —Å–∏—Å—Ç–µ–º–µ
        {"name": "Manager"},         # –ú–µ–Ω–µ–¥–∂–µ—Ä - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
        {"name": "Support"},         # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö
        {"name": "Cashier"},         # –ö–∞—Å—Å–∏—Ä - —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—á–µ—Ç–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        {"name": "Loan_Officer"},    # –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç - —Ä–∞–±–æ—Ç–∞ —Å –∫—Ä–µ–¥–∏—Ç–∞–º–∏
    ]

    for role_data in roles_data:
        existing_role = db.query(models.Role).filter(
            models.Role.name == role_data["name"]
        ).first()

        if not existing_role:
            new_role = models.Role(**role_data)
            db.add(new_role)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: {role_data['name']}")
        else:
            print(f"‚ÑπÔ∏è  –†–æ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {role_data['name']}")

    db.commit()


def init_branches(db: Session):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–¥–µ–ª–µ–Ω–∏–π –≤ –ë—Ä—è–Ω—Å–∫–µ"""
    branches_data = [
        {
            "name": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "address": "–≥. –ë—Ä—è–Ω—Å–∫, –ø—Ä-—Ç –õ–µ–Ω–∏–Ω–∞, –¥. 45",
            "phone": "+7 (4832) 123-45-67"
        },
        {
            "name": "–ë–µ–∂–∏—Ü–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "address": "–≥. –ë—Ä—è–Ω—Å–∫, —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, –¥. 12–ê",
            "phone": "+7 (4832) 234-56-78"
        },
        {
            "name": "–§–æ–∫–∏–Ω—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ",
            "address": "–≥. –ë—Ä—è–Ω—Å–∫, —É–ª. –ö—Ä–∞—Å–Ω–æ–∞—Ä–º–µ–π—Å–∫–∞—è, –¥. 89",
            "phone": "+7 (4832) 345-67-89"
        }
    ]

    for branch_data in branches_data:
        existing_branch = db.query(models.Branch).filter(
            models.Branch.name == branch_data["name"]
        ).first()

        if not existing_branch:
            new_branch = models.Branch(**branch_data)
            db.add(new_branch)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ: {branch_data['name']}")
        else:
            print(f"‚ÑπÔ∏è  –û—Ç–¥–µ–ª–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {branch_data['name']}")

    db.commit()


def create_superadmin(db: Session):
    """
    üÜï –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ SuperAdmin –∏–∑ .env

    –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:
    - SUPERADMIN_EMAIL
    - SUPERADMIN_PASSWORD
    """
    # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
    superadmin_email = os.getenv("SUPERADMIN_EMAIL", "superadmin@nextbank.ru")
    superadmin_password = os.getenv("SUPERADMIN_PASSWORD")

    if not superadmin_password:
        print("‚ùå –û–®–ò–ë–ö–ê: SUPERADMIN_PASSWORD –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–æ–ª—å SuperAdmin
    superadmin_role = db.query(models.Role).filter(
        models.Role.name == "SuperAdmin"
    ).first()

    if not superadmin_role:
        print("‚ùå –†–æ–ª—å SuperAdmin –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ SuperAdmin
    existing_superadmin = db.query(models.Employee).filter(
        models.Employee.role_id == superadmin_role.id
    ).first()

    if existing_superadmin:
        print(f"‚ÑπÔ∏è  SuperAdmin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {existing_superadmin.email}")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ
    first_branch = db.query(models.Branch).first()
    if not first_branch:
        print("‚ùå –û—Ç–¥–µ–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è.")
        return

    # üÜï –°–æ–∑–¥–∞–µ–º SuperAdmin –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    print("\n" + "="*60)
    print("üëë –°–æ–∑–¥–∞–Ω–∏–µ SuperAdmin...")
    print("="*60)

    try:
        # –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        hashed_password = hash_password(superadmin_password)

        # –°–æ–∑–¥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        superadmin = models.Employee(
            first_name="–°—É–ø–µ—Ä",
            last_name="–ê–¥–º–∏–Ω",
            patronymic="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤–∏—á",
            email=superadmin_email,
            hashed_password=hashed_password,
            is_active=True,
            role_id=superadmin_role.id,
            branch_id=first_branch.id
        )

        db.add(superadmin)
        db.commit()
        db.refresh(superadmin)

        print(f"‚úÖ SuperAdmin —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"üìß Email: {superadmin_email}")
        print(f"üîë –ü–∞—Ä–æ–ª—å: {superadmin_password}")
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")
        print("="*60 + "\n")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ SuperAdmin: {e}")
        db.rollback()


def initialize_database(db: Session):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("\n" + "="*50)
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("="*50 + "\n")

    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π...")
    init_roles(db)

    print("\nüè¢ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–π...")
    init_branches(db)

    print("\nüëë –°–æ–∑–¥–∞–Ω–∏–µ SuperAdmin...")
    create_superadmin(db)

    print("="*50)
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("="*50 + "\n")
