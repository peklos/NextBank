import axios from "./axios";

// üÜï –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫—Ä–µ–¥–∏—Ç
export const applyForLoan = async (loanData) => {
    try {
        const res = await axios.post('/loans/apply', loanData);
        return { data: res.data, error: null };
    } catch (err) {
        const detail = err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫—Ä–µ–¥–∏—Ç';
        return { data: null, error: detail };
    }
};

// üìú –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫—Ä–µ–¥–∏—Ç—ã —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getMyLoans = async () => {
    try {
        const res = await axios.get('/loans/me');
        return { data: res.data, error: null };
    } catch (err) {
        const detail = err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã';
        return { data: null, error: detail };
    }
};

// üîç –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞
export const getLoanDetails = async (loanId) => {
    try {
        const res = await axios.get(`/loans/${loanId}`);
        return { data: res.data, error: null };
    } catch (err) {
        const detail = err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–µ–¥–∏—Ç–µ';
        return { data: null, error: detail };
    }
};

// üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
export const payLoan = async (loanId, paymentData) => {
    try {
        const res = await axios.post(`/loans/${loanId}/pay`, paymentData);
        return { data: res.data, error: null };
    } catch (err) {
        const detail = err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–µ–¥–∏—Ç';
        return { data: null, error: detail };
    }
};

// üìä –ü–æ–ª—É—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π
export const getLoanSchedule = async (loanId) => {
    try {
        const res = await axios.get(`/loans/${loanId}/schedule`);
        return { data: res.data, error: null };
    } catch (err) {
        const detail = err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π';
        return { data: null, error: detail };
    }
};