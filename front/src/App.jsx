// front/src/App.jsx
import { useEffect, useState } from 'react';
import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';
import { useDispatch } from 'react-redux';

// –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import Login from './pages/Login';
import Register from './pages/Register';
import Dashboard from './pages/Dashboard';
import Accounts from './pages/Accounts';
import Loans from './pages/Loans';
import Transfers from './pages/Transactions';
import Profile from './pages/Profile';

// –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import AdminLogin from './pages/AdminLogin';
import AdminDashboard from './pages/AdminDashboard';
import EmployeeProfile from './pages/EmployeeProfile';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import PrivateLayout from './components/PrivateLayout';
import ProtectedRoute from './components/ProtectedRoute';
import PublicRoute from './components/PublicRoute';
import LoadingScreen from './components/LoadingScreen';

// –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ adm_db_components
import { AdminProtectedRoute, AdminPublicRoute } from './adm_db_components';

// –°–µ—Ä–≤–∏—Å—ã
import { autoLogin } from './services/authService';
import { autoLoginEmployee } from './services/employeeAuthService';

function App() {
  const dispatch = useDispatch();
  const [isInitializing, setIsInitializing] = useState(true);

  useEffect(() => {
    const initializeAuth = async () => {
      console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...");

      const promises = [];

      // ‚úÖ –ê–≤—Ç–æ–ª–æ–≥–∏–Ω –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
      if (localStorage.getItem('access_token')) {
        console.log("üîç –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –∫–ª–∏–µ–Ω—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º...");
        promises.push(
          autoLogin(dispatch).then(success => {
            if (success) {
              console.log("‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            } else {
              console.log("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω –∫–ª–∏–µ–Ω—Ç–∞");
            }
            return success;
          }).catch(err => {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:", err);
            return false;
          })
        );
      }

      // ‚úÖ –ê–≤—Ç–æ–ª–æ–≥–∏–Ω –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      if (localStorage.getItem('employee_token')) {
        console.log("üîç –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º...");
        promises.push(
          autoLoginEmployee(dispatch).then(success => {
            if (success) {
              console.log("‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            } else {
              console.log("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
            }
            return success;
          }).catch(err => {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:", err);
            return false;
          })
        );
      }

      // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–æ–≤
      await Promise.allSettled(promises);

      // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      await new Promise(resolve => setTimeout(resolve, 500));

      console.log("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
      setIsInitializing(false);
    };

    initializeAuth();
  }, [dispatch]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º LoadingScreen –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  if (isInitializing) {
    return <LoadingScreen />;
  }

  return (
    <BrowserRouter>
      <Routes>
        {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
        <Route path="/" element={<Navigate to="/login" replace />} />

        {/* –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Ä–æ—É—Ç—ã */}
        <Route
          path="/login"
          element={
            <PublicRoute>
              <Login />
            </PublicRoute>
          }
        />
        <Route
          path="/register"
          element={
            <PublicRoute>
              <Register />
            </PublicRoute>
          }
        />

        {/* –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã */}
        <Route
          path="/*"
          element={
            <ProtectedRoute>
              <PrivateLayout />
            </ProtectedRoute>
          }
        >
          <Route path="dashboard" element={<Dashboard />} />
          <Route path="accounts" element={<Accounts />} />
          <Route path="loans" element={<Loans />} />
          <Route path="transfers" element={<Transfers />} />
          <Route path="profile" element={<Profile />} />
        </Route>

        {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Ä–æ—É—Ç—ã */}
        <Route
          path="/admin/login"
          element={
            <AdminPublicRoute>
              <AdminLogin />
            </AdminPublicRoute>
          }
        />

        {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã */}
        <Route
          path="/admin/dashboard"
          element={
            <AdminProtectedRoute>
              <AdminDashboard />
            </AdminProtectedRoute>
          }
        />
        <Route
          path="/admin/profile"
          element={
            <AdminProtectedRoute>
              <EmployeeProfile />
            </AdminProtectedRoute>
          }
        />

        {/* 404 */}
        <Route path="*" element={<Navigate to="/login" replace />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;