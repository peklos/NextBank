import React, { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import styles from '../styles/accounts.module.css';
import { useDispatch } from 'react-redux';
import { createClientAccount, deleteClientAccount } from '../api/accounts';
import { addAccount, removeAccount } from '../features/accounts/accSlice';

const Accounts = () => {
    const [selectedAccount, setSelectedAccount] = useState(null);
    const [showCreateAccountConfirm, setShowCreateAccountConfirm] = useState(false);
    const [showApplicationSuccess, setShowApplicationSuccess] = useState(false);
    const [showDeleteAccountConfirm, setShowDeleteAccountConfirm] = useState(false);
    const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);
    const [accountToDelete, setAccountToDelete] = useState(null);

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–æ–≤ –∏–∑ Redux store
    const accountsData = useSelector(state => state.accounts);
    const user = useSelector(state => state.auth)
    const accounts = accountsData.list || [];

    const dispatch = useDispatch()

    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalStats = {
        totalBalance: accounts.reduce((sum, account) => sum + account.balance, 0).toLocaleString('ru-RU') + ' ‚ÇΩ',
        totalAccounts: accounts.length,
        activeAccounts: accounts.length, // –í—Å–µ —Å—á–µ—Ç–∞ –∞–∫—Ç–∏–≤–Ω—ã
    };

    // –í—Å–µ —Å—á–µ—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    const filteredAccounts = accounts;

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–∞
    const formatAccountNumber = (number) => {
        return number.slice(0, 4) + ' ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ' + number.slice(-4);
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        });
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∏ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å—á–µ—Ç–∞ (–ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞)
    const getAccountInfo = (account, index) => {
        const colors = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444', '#06b6d4'];
        const icons = ['üí≥', 'üí∞', 'üè¶', 'üíé', 'üìà', 'üíµ'];

        return {
            icon: icons[index % icons.length],
            color: colors[index % colors.length],
        };
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞
    const handleCreateAccount = () => {
        setShowCreateAccountConfirm(true);
        document.body.style.overflow = 'hidden';
    };

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞
    const handleConfirmCreate = async () => {
        setShowCreateAccountConfirm(false);

        const res = await createClientAccount(user.id)

        if (res.data != null) {
            dispatch(addAccount(res.data))
        } else {
            alert(res.error)
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        setShowApplicationSuccess(true);
    };

    // –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞
    const handleCancelCreate = () => {
        setShowCreateAccountConfirm(false);
        document.body.style.overflow = 'unset';
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
    const handleCloseSuccess = () => {
        setShowApplicationSuccess(false);
        document.body.style.overflow = 'unset';
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
    const handleDeleteAccount = (account, e) => {
        e.stopPropagation();
        setAccountToDelete(account);
        setShowDeleteAccountConfirm(true);
        document.body.style.overflow = 'hidden';
    };

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
    const handleConfirmDelete = async () => {
        setShowDeleteAccountConfirm(false);

        const res = await deleteClientAccount(accountToDelete.id)

        if (res.data != null) {
            console.log('–°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')
            dispatch(removeAccount(accountToDelete.id))
        } else {
            console.log(res.error)
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—á–µ—Ç–∞: ' + res.error)
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —É–¥–∞–ª–µ–Ω–∏—è
        setShowDeleteSuccess(true);
    };

    // –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
    const handleCancelDelete = () => {
        setShowDeleteAccountConfirm(false);
        setAccountToDelete(null);
        document.body.style.overflow = 'unset';
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    const handleCloseDeleteSuccess = () => {
        setShowDeleteSuccess(false);
        setAccountToDelete(null);
        document.body.style.overflow = 'unset';
    };

    useEffect(() => {
        return () => {
            document.body.style.overflow = 'unset';
        };
    }, []);

    return (
        <div className={styles.accountsContainer}>
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
            <div className={styles.background}>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
            </div>

            <div className={styles.accountsContent}>
                {/* –•–µ–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
                <header className={styles.pageHeader}>
                    <div className={styles.headerMain}>
                        <div className={styles.titleSection}>
                            <h1 className={styles.pageTitle}>
                                <span className={styles.titleIcon}>üè¶</span>
                                –ú–æ–∏ —Å—á–µ—Ç–∞
                            </h1>
                            <p className={styles.pageSubtitle}>
                                –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏–º–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ —Å—á–µ—Ç–∞–º–∏
                            </p>
                        </div>
                        <div className={styles.headerStats}>
                            <div className={styles.statCard}>
                                <span className={styles.statLabel}>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</span>
                                <span className={styles.statValue}>{totalStats.totalBalance}</span>
                            </div>
                            <div className={styles.statCard}>
                                <span className={styles.statLabel}>–í—Å–µ–≥–æ —Å—á–µ—Ç–æ–≤</span>
                                <span className={styles.statValue}>{totalStats.totalAccounts}</span>
                            </div>
                        </div>
                    </div>
                </header>

                {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
                <main className={styles.accountsMain}>
                    <div className={styles.contentGrid}>
                        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                        <div className={styles.leftColumn}>
                            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                            <section className={styles.actionsCard}>
                                <div className={styles.cardHeader}>
                                    <h2 className={styles.cardTitle}>
                                        <span className={styles.cardIcon}>‚ö°</span>
                                        –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                                    </h2>
                                </div>
                                <div className={styles.actionsList}>
                                    <button className={styles.actionButton} onClick={handleCreateAccount}>
                                        <span className={styles.actionIcon}>‚ûï</span>
                                        <span className={styles.actionText}>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å—á–µ—Ç</span>
                                    </button>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üí∏</span>
                                        <span className={styles.actionText}>–ü–µ—Ä–µ–≤–æ–¥ –º–µ–∂–¥—É —Å—á–µ—Ç–∞–º–∏</span>
                                    </button>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üîç</span>
                                        <span className={styles.actionText}>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</span>
                                    </button>
                                </div>
                            </section>
                        </div>

                        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–ø–∏—Å–æ–∫ —Å—á–µ—Ç–æ–≤ */}
                        <div className={styles.rightColumn}>
                            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–∏—Å–∫ */}
                            <div className={styles.accountsHeader}>
                                <h2 className={styles.sectionTitle}>
                                    –ú–æ–∏ —Å—á–µ—Ç–∞
                                    <span className={styles.accountsCount}>({filteredAccounts.length})</span>
                                </h2>
                                <div className={styles.searchBox}>
                                    <input
                                        type="text"
                                        placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Å—á–µ—Ç–∞..."
                                        className={styles.searchInput}
                                    />
                                    <span className={styles.searchIcon}>üîç</span>
                                </div>
                            </div>

                            {/* –°–ø–∏—Å–æ–∫ —Å—á–µ—Ç–æ–≤ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ */}
                            {filteredAccounts.length === 0 ? (
                                <div className={styles.emptyState}>
                                    <div className={styles.emptyIcon}>üè¶</div>
                                    <h3 className={styles.emptyTitle}>–£ –≤–∞—Å –Ω–µ—Ç —Å—á–µ—Ç–æ–≤</h3>
                                    <p className={styles.emptyDescription}>
                                        –û—Ç–∫—Ä–æ–π—Ç–µ –ø–µ—Ä–≤—ã–π —Å—á–µ—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏
                                    </p>
                                    <button className={styles.createAccountButton} onClick={handleCreateAccount}>
                                        <span className={styles.addIcon}>+</span>
                                        –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Å—á–µ—Ç
                                    </button>
                                </div>
                            ) : (
                                <>
                                    <div className={styles.accountsGrid}>
                                        {filteredAccounts.map((account, index) => {
                                            const accountInfo = getAccountInfo(account, index);
                                            return (
                                                <div
                                                    key={account.id}
                                                    className={`${styles.accountCard} ${selectedAccount === account.id ? styles.accountCardSelected : ''}`}
                                                    onClick={() => setSelectedAccount(account.id)}
                                                >
                                                    <div className={styles.accountHeader}>
                                                        <div className={styles.accountIcon} style={{ backgroundColor: accountInfo.color }}>
                                                            <span>{accountInfo.icon}</span>
                                                        </div>
                                                        <div className={styles.accountInfo}>
                                                            <h3 className={styles.accountName}>–°—á–µ—Ç {account.id}</h3>
                                                            <span className={styles.accountNumber}>
                                                                {formatAccountNumber(account.account_number)}
                                                            </span>
                                                        </div>
                                                        <div className={styles.accountStatus}>
                                                            <span className={`${styles.statusBadge} ${styles.statusActive}`}>
                                                                –ê–∫—Ç–∏–≤–µ–Ω
                                                            </span>
                                                        </div>
                                                    </div>

                                                    <div className={styles.accountBalance}>
                                                        <span className={`${styles.balance} ${account.balance < 0 ? styles.negativeBalance : ''}`}>
                                                            {account.balance.toLocaleString('ru-RU')} ‚ÇΩ
                                                        </span>
                                                    </div>

                                                    <div className={styles.accountDetails}>
                                                        <div className={styles.detailItem}>
                                                            <span className={styles.detailLabel}>–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è:</span>
                                                            <span className={styles.detailValue}>{formatDate(account.created_at)}</span>
                                                        </div>
                                                        <div className={styles.detailItem}>
                                                            <span className={styles.detailLabel}>–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞:</span>
                                                            <span className={styles.detailValue}>{account.account_number}</span>
                                                        </div>
                                                    </div>

                                                    <div className={styles.accountFooter}>
                                                        <div className={styles.accountActions}>
                                                            <button
                                                                className={styles.actionBtn}
                                                                onClick={(e) => {
                                                                    e.stopPropagation();
                                                                    // –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–ø–µ—Ä–∞—Ü–∏–π
                                                                }}
                                                            >
                                                                üìä –û–ø–µ—Ä–∞—Ü–∏–∏
                                                            </button>
                                                            <button
                                                                className={`${styles.actionBtn} ${styles.dangerBtn}`}
                                                                onClick={(e) => handleDeleteAccount(account, e)}
                                                            >
                                                                üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            );
                                        })}
                                    </div>

                                    {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ */}
                                    <div className={styles.addAccountSection}>
                                        <button className={styles.addAccountButton} onClick={handleCreateAccount}>
                                            <span className={styles.addIcon}>+</span>
                                            –û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π —Å—á–µ—Ç
                                        </button>
                                    </div>
                                </>
                            )}
                        </div>
                    </div>
                </main>
            </div>

            {/* –ü–æ–ø–∞–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞ */}
            {showCreateAccountConfirm && (
                <div className={styles.modalOverlay}>
                    <div className={styles.modalContent}>
                        <div className={styles.modalHeader}>
                            <h2 className={styles.modalTitle}>
                                <span className={styles.modalIcon}>üè¶</span>
                                –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞
                            </h2>
                            <button className={styles.modalClose} onClick={handleCancelCreate}>
                                <svg viewBox="0 0 24 24" fill="none">
                                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                                </svg>
                            </button>
                        </div>

                        <div className={styles.modalBody}>
                            <div className={styles.confirmContent}>
                                <div className={styles.confirmIcon}>‚ùì</div>
                                <h3 className={styles.confirmTitle}>
                                    –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Å—á–µ—Ç?
                                </h3>
                                <p className={styles.confirmDescription}>
                                    –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞.
                                    –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.
                                </p>
                            </div>

                            <div className={styles.modalFooter}>
                                <button className={styles.cancelButton} onClick={handleCancelCreate}>
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                                <button className={styles.saveButton} onClick={handleConfirmCreate}>
                                    –î–∞, —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* –ü–æ–ø–∞–ø —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ */}
            {showApplicationSuccess && (
                <div className={styles.modalOverlay}>
                    <div className={styles.modalContent}>
                        <div className={styles.modalHeader}>
                            <h2 className={styles.modalTitle}>
                                <span className={styles.modalIcon}>‚úÖ</span>
                                –ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞
                            </h2>
                            <button className={styles.modalClose} onClick={handleCloseSuccess}>
                                <svg viewBox="0 0 24 24" fill="none">
                                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                                </svg>
                            </button>
                        </div>

                        <div className={styles.modalBody}>
                            <div className={styles.successContent}>
                                <div className={styles.successIcon}>üéâ</div>
                                <h3 className={styles.successTitle}>
                                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –±—ã–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞
                                </h3>
                                <p className={styles.successDescription}>
                                    –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç.
                                    –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å—á–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
                                </p>
                            </div>

                            <div className={styles.modalFooter}>
                                <button className={styles.saveButton} onClick={handleCloseSuccess}>
                                    –ü–æ–Ω—è—Ç–Ω–æ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* –ü–æ–ø–∞–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ */}
            {showDeleteAccountConfirm && accountToDelete && (
                <div className={styles.modalOverlay}>
                    <div className={styles.modalContent}>
                        <div className={styles.modalHeader}>
                            <h2 className={styles.modalTitle}>
                                <span className={styles.modalIcon}>üóëÔ∏è</span>
                                –£–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞
                            </h2>
                            <button className={styles.modalClose} onClick={handleCancelDelete}>
                                <svg viewBox="0 0 24 24" fill="none">
                                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                                </svg>
                            </button>
                        </div>

                        <div className={styles.modalBody}>
                            <div className={styles.confirmContent}>
                                <div className={styles.confirmIcon} style={{ color: '#ef4444' }}>‚ö†Ô∏è</div>
                                <h3 className={styles.confirmTitle}>
                                    –í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç?
                                </h3>
                                <p className={styles.confirmDescription}>
                                    –í–º–µ—Å—Ç–µ —Å –Ω–∏–º —É–¥–∞–ª—è—Ç—Å—è –∏ –æ–±–Ω—É–ª—è—Ç—Å—è –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —ç—Ç–æ–º—É —Å—á–µ—Ç—É.
                                    –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.
                                </p>
                                <div className={styles.accountPreview}>
                                    <div className={styles.accountPreviewIcon} style={{ backgroundColor: getAccountInfo(accountToDelete, accounts.findIndex(acc => acc.id === accountToDelete.id)).color }}>
                                        <span>{getAccountInfo(accountToDelete, accounts.findIndex(acc => acc.id === accountToDelete.id)).icon}</span>
                                    </div>
                                    <div className={styles.accountPreviewInfo}>
                                        <span className={styles.accountPreviewName}>–°—á–µ—Ç {accountToDelete.id}</span>
                                        <span className={styles.accountPreviewNumber}>{formatAccountNumber(accountToDelete.account_number)}</span>
                                    </div>
                                </div>
                            </div>

                            <div className={styles.modalFooter}>
                                <button className={styles.cancelButton} onClick={handleCancelDelete}>
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                                <button className={`${styles.saveButton} ${styles.dangerButton}`} onClick={handleConfirmDelete}>
                                    –î–∞, —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* –ü–æ–ø–∞–ø —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ */}
            {showDeleteSuccess && (
                <div className={styles.modalOverlay}>
                    <div className={styles.modalContent}>
                        <div className={styles.modalHeader}>
                            <h2 className={styles.modalTitle}>
                                <span className={styles.modalIcon}>‚úÖ</span>
                                –ó–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
                            </h2>
                            <button className={styles.modalClose} onClick={handleCloseDeleteSuccess}>
                                <svg viewBox="0 0 24 24" fill="none">
                                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                                </svg>
                            </button>
                        </div>

                        <div className={styles.modalBody}>
                            <div className={styles.successContent}>
                                <div className={styles.successIcon}>üì®</div>
                                <h3 className={styles.successTitle}>
                                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
                                </h3>
                                <p className={styles.successDescription}>
                                    –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç.
                                    –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å—á–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.
                                </p>
                            </div>

                            <div className={styles.modalFooter}>
                                <button className={styles.saveButton} onClick={handleCloseDeleteSuccess}>
                                    –ü–æ–Ω—è—Ç–Ω–æ
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Accounts;