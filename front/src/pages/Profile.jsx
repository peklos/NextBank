import React, { useState, useEffect } from 'react';
import styles from '../styles/profile.module.css';
import { useDispatch, useSelector } from 'react-redux';
import { logout } from '../features/auth/authSlice';

const Profile = () => {
    const dispatch = useDispatch()
    const user = useSelector(state => state.auth)
    const [showPersonalInfo, setShowPersonalInfo] = useState(false);
    const [activeTab, setActiveTab] = useState('view'); // 'view' –∏–ª–∏ 'edit'
    const [personalInfo, setPersonalInfo] = useState({
        passport_number: '',
        address: '',
        birth_date: '',
        employment_status: ''
    });

    const [isEditingPersonalInfo, setIsEditingPersonalInfo] = useState(false);
    const [personalInfoForm, setPersonalInfoForm] = useState({
        firstName: '',
        lastName: '',
        patronymic: '',
        email: '',
        phone: ''
    });
    const [notificationsEnabled, setNotificationsEnabled] = useState(true);

    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ø–∞–ø–∞
    useEffect(() => {
        if (showPersonalInfo) {
            document.body.style.overflow = 'hidden';
        } else {
            document.body.style.overflow = 'unset';
        }

        return () => {
            document.body.style.overflow = 'unset';
        };
    }, [showPersonalInfo]);

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux store
    const userData = {
        firstName: user?.first_name || '–ò–≤–∞–Ω',
        lastName: user?.last_name || '–ò–≤–∞–Ω–æ–≤',
        patronymic: user?.patronymic || '–ò–≤–∞–Ω–æ–≤–∏—á',
        email: user?.email || 'ivan.ivanov@nextbank.ru',
        phone: user?.phone || '+7 (999) 123-45-67',
        joinDate: user?.created_at ? new Date(user.created_at).toLocaleDateString('ru-RU', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        }) : '15 —è–Ω–≤–∞—Ä—è 2024',
        tier: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    };

    // –ü–æ–ª–Ω–æ–µ –∏–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const fullName = `${userData.lastName} ${userData.firstName} ${userData.patronymic}`.trim();

    // –î–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–æ–≤
    const accounts = [
        {
            id: 1,
            name: '–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç',
            number: '4081 7810 0999 1000 4321',
            balance: '1 250 750 ‚ÇΩ',
            type: 'RUB',
            currency: 'RUB',
            available: '1 250 750 ‚ÇΩ',
            icon: 'üí≥'
        },
        {
            id: 2,
            name: '–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π',
            number: '4081 7810 0999 1000 4322',
            balance: '350 000 ‚ÇΩ',
            type: 'RUB',
            currency: 'RUB',
            available: '350 000 ‚ÇΩ',
            icon: 'üí∞'
        },
        {
            id: 3,
            name: '–î–æ–ª–ª–∞—Ä–æ–≤—ã–π —Å—á–µ—Ç',
            number: '4081 7810 0999 1000 4323',
            balance: '$15,250',
            type: 'USD',
            currency: 'USD',
            available: '$15,250',
            icon: 'üíµ'
        }
    ];

    const totalBalance = accounts.reduce((total, account) => {
        const balance = parseFloat(account.balance.replace(/[^\d.]/g, ''));
        return total + balance;
    }, 0);

    const handlePersonalInfoChange = (e) => {
        const { name, value } = e.target;
        setPersonalInfo(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handlePersonalInfoFormChange = (e) => {
        const { name, value } = e.target;
        setPersonalInfoForm(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSavePersonalInfo = () => {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', personalInfo);
        setShowPersonalInfo(false);
        setActiveTab('view');
    };

    const handleSavePersonalInfoForm = () => {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', personalInfoForm);
        setIsEditingPersonalInfo(false);
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Redux/store
    };

    const handleEditClick = () => {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—Ä–∞—Ç—å –∏–∑ API)
        setPersonalInfo({
            passport_number: '1234 567890',
            address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –∫–≤. 45',
            birth_date: '1990-05-15',
            employment_status: '–†–∞–±–æ—Ç–∞—é'
        });
        setActiveTab('edit');
    };

    const handleEditPersonalInfoClick = () => {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setPersonalInfoForm({
            firstName: userData.firstName,
            lastName: userData.lastName,
            patronymic: userData.patronymic,
            email: userData.email,
            phone: userData.phone
        });
        setIsEditingPersonalInfo(true);
    };

    const handleCancelEdit = () => {
        setActiveTab('view');
    };

    const handleCancelPersonalInfoEdit = () => {
        setIsEditingPersonalInfo(false);
    };

    const handleCloseModal = () => {
        setShowPersonalInfo(false);
        setActiveTab('view');
    };

    const toggleNotifications = () => {
        setNotificationsEnabled(!notificationsEnabled);
    };

    return (
        <div className={styles.profileContainer}>
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
            <div className={styles.background}>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
            </div>

            <div className={styles.profileContent}>
                {/* –•–µ–¥–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è */}
                <header className={styles.profileHeader}>
                    <div className={styles.headerMain}>
                        <div className={styles.avatarSection}>
                            <div className={styles.avatar}>
                                <span className={styles.avatarInitials}>
                                    {`${userData.lastName[0]}${userData.firstName[0]}`}
                                </span>
                            </div>
                            <div className={styles.userInfo}>
                                <h1 className={styles.userName}>{fullName}</h1>
                                <div className={styles.userBadges}>
                                    <span className={styles.badgePrimary}>{userData.tier}</span>
                                </div>
                            </div>
                        </div>
                        <div className={styles.headerStats}>
                            <div className={styles.statItem}>
                                <span className={styles.statLabel}>–ö–ª–∏–µ–Ω—Ç —Å</span>
                                <span className={styles.statValue}>{userData.joinDate}</span>
                            </div>
                            <div className={styles.statItem}>
                                <span className={styles.statLabel}>–í—Å–µ–≥–æ —Å—á–µ—Ç–æ–≤</span>
                                <span className={styles.statValue}>{accounts.length}</span>
                            </div>
                        </div>
                    </div>
                </header>

                {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
                <main className={styles.profileMain}>
                    <div className={styles.contentGrid}>
                        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å—á–µ—Ç–∞ */}
                        <div className={styles.leftColumn}>
                            {/* –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                            <section className={styles.infoCard}>
                                <div className={styles.cardHeader}>
                                    <h2 className={styles.cardTitle}>
                                        <span className={styles.cardIcon}>üë§</span>
                                        –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                                    </h2>
                                    {!isEditingPersonalInfo && (
                                        <button
                                            className={styles.editButton}
                                            onClick={handleEditPersonalInfoClick}
                                        >
                                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13" stroke="currentColor" strokeWidth="2" />
                                                <path d="M18.5 2.5C18.8978 2.10217 19.4374 1.87868 20 1.87868C20.5626 1.87868 21.1022 2.10217 21.5 2.5C21.8978 2.89782 22.1213 3.43739 22.1213 4C22.1213 4.56261 21.8978 5.10217 21.5 5.5L12 15L8 16L9 12L18.5 2.5Z" stroke="currentColor" strokeWidth="2" />
                                            </svg>
                                        </button>
                                    )}
                                </div>

                                {isEditingPersonalInfo ? (
                                    <div className={styles.editForm}>
                                        <div className={styles.formGrid}>
                                            <div className={styles.formGroup}>
                                                <label className={styles.formLabel}>–§–∞–º–∏–ª–∏—è</label>
                                                <input
                                                    type="text"
                                                    name="lastName"
                                                    value={personalInfoForm.lastName}
                                                    onChange={handlePersonalInfoFormChange}
                                                    className={styles.formInput}
                                                />
                                            </div>
                                            <div className={styles.formGroup}>
                                                <label className={styles.formLabel}>–ò–º—è</label>
                                                <input
                                                    type="text"
                                                    name="firstName"
                                                    value={personalInfoForm.firstName}
                                                    onChange={handlePersonalInfoFormChange}
                                                    className={styles.formInput}
                                                />
                                            </div>
                                            <div className={styles.formGroup}>
                                                <label className={styles.formLabel}>–û—Ç—á–µ—Å—Ç–≤–æ</label>
                                                <input
                                                    type="text"
                                                    name="patronymic"
                                                    value={personalInfoForm.patronymic}
                                                    onChange={handlePersonalInfoFormChange}
                                                    className={styles.formInput}
                                                />
                                            </div>
                                            <div className={styles.formGroup}>
                                                <label className={styles.formLabel}>Email</label>
                                                <input
                                                    type="email"
                                                    name="email"
                                                    value={personalInfoForm.email}
                                                    onChange={handlePersonalInfoFormChange}
                                                    className={styles.formInput}
                                                />
                                            </div>
                                            <div className={styles.formGroup}>
                                                <label className={styles.formLabel}>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                                <input
                                                    type="tel"
                                                    name="phone"
                                                    value={personalInfoForm.phone}
                                                    onChange={handlePersonalInfoFormChange}
                                                    className={styles.formInput}
                                                />
                                            </div>
                                        </div>
                                        <div className={styles.formActions}>
                                            <button
                                                className={styles.cancelButton}
                                                onClick={handleCancelPersonalInfoEdit}
                                            >
                                                –û—Ç–º–µ–Ω–∞
                                            </button>
                                            <button
                                                className={styles.saveButton}
                                                onClick={handleSavePersonalInfoForm}
                                            >
                                                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
                                            </button>
                                        </div>
                                    </div>
                                ) : (
                                    <div className={styles.infoList}>
                                        <div className={styles.infoRow}>
                                            <div className={styles.infoIcon}>üë§</div>
                                            <div className={styles.infoContent}>
                                                <span className={styles.infoLabel}>–§–∞–º–∏–ª–∏—è</span>
                                                <span className={styles.infoValue}>{userData.lastName}</span>
                                            </div>
                                        </div>
                                        <div className={styles.infoRow}>
                                            <div className={styles.infoIcon}>üë§</div>
                                            <div className={styles.infoContent}>
                                                <span className={styles.infoLabel}>–ò–º—è</span>
                                                <span className={styles.infoValue}>{userData.firstName}</span>
                                            </div>
                                        </div>
                                        <div className={styles.infoRow}>
                                            <div className={styles.infoIcon}>üë§</div>
                                            <div className={styles.infoContent}>
                                                <span className={styles.infoLabel}>–û—Ç—á–µ—Å—Ç–≤–æ</span>
                                                <span className={styles.infoValue}>{userData.patronymic}</span>
                                            </div>
                                        </div>
                                        <div className={styles.infoRow}>
                                            <div className={styles.infoIcon}>üìß</div>
                                            <div className={styles.infoContent}>
                                                <span className={styles.infoLabel}>Email</span>
                                                <span className={styles.infoValue}>{userData.email}</span>
                                            </div>
                                        </div>
                                        <div className={styles.infoRow}>
                                            <div className={styles.infoIcon}>üì±</div>
                                            <div className={styles.infoContent}>
                                                <span className={styles.infoLabel}>–¢–µ–ª–µ—Ñ–æ–Ω</span>
                                                <span className={styles.infoValue}>{userData.phone}</span>
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </section>

                            {/* –í–∞—à–∏ —Å—á–µ—Ç–∞ */}
                            <section className={styles.accountsCard}>
                                <div className={styles.cardHeader}>
                                    <h2 className={styles.cardTitle}>
                                        <span className={styles.cardIcon}>üí≥</span>
                                        –í–∞—à–∏ —Å—á–µ—Ç–∞
                                    </h2>
                                    <div className={styles.totalBalance}>
                                        <span className={styles.balanceLabel}>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</span>
                                        <span className={styles.balanceAmount}>
                                            {new Intl.NumberFormat('ru-RU').format(totalBalance)} ‚ÇΩ
                                        </span>
                                    </div>
                                </div>
                                <div className={styles.accountsList}>
                                    {accounts.map((account) => (
                                        <div key={account.id} className={styles.accountItem}>
                                            <div className={styles.accountIcon}>
                                                <span>{account.icon}</span>
                                            </div>
                                            <div className={styles.accountInfo}>
                                                <div className={styles.accountMain}>
                                                    <span className={styles.accountName}>{account.name}</span>
                                                    <span className={styles.accountNumber}>{account.number}</span>
                                                </div>
                                                <div className={styles.accountBalance}>
                                                    <span className={styles.balance}>{account.balance}</span>
                                                    <span className={styles.currency}>{account.currency}</span>
                                                </div>
                                            </div>
                                            <div className={styles.accountActions}>
                                                <button className={styles.actionBtn}>‚Üí</button>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                                <button className={styles.viewAllButton}>
                                    <span>–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—á–µ—Ç–∞</span>
                                    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" strokeWidth="2" />
                                    </svg>
                                </button>
                            </section>
                        </div>

                        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –î–µ–π—Å—Ç–≤–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
                        <div className={styles.rightColumn}>
                            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                            <section className={styles.actionsCard}>
                                <div className={styles.cardHeader}>
                                    <h2 className={styles.cardTitle}>
                                        <span className={styles.cardIcon}>‚ö°</span>
                                        –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                                    </h2>
                                </div>
                                <div className={styles.actionsGrid}>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üîê</span>
                                        <span className={styles.actionText}>–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</span>
                                    </button>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üìß</span>
                                        <span className={styles.actionText}>–ò–∑–º–µ–Ω–∏—Ç—å email</span>
                                    </button>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üì±</span>
                                        <span className={styles.actionText}>–°–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω</span>
                                    </button>
                                    <button
                                        className={styles.actionButton}
                                        onClick={toggleNotifications}
                                    >
                                        <span className={styles.actionIcon}>
                                            {notificationsEnabled ? 'üîî' : 'üîï'}
                                        </span>
                                        <span className={styles.actionText}>
                                            {notificationsEnabled ? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' : '–ë–µ–∑ –∑–≤—É–∫–∞'}
                                        </span>
                                    </button>
                                    <button className={styles.actionButton}>
                                        <span className={styles.actionIcon}>üìä</span>
                                        <span className={styles.actionText}>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</span>
                                    </button>
                                    <button
                                        className={styles.actionButton}
                                        onClick={() => setShowPersonalInfo(true)}
                                    >
                                        <span className={styles.actionIcon}>üìÑ</span>
                                        <span className={styles.actionText}>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>
                                    </button>
                                </div>
                            </section>

                            {/* –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã */}
                            <section className={styles.logoutCard}>
                                <div className={styles.cardHeader}>
                                    <h2 className={styles.cardTitle}>
                                        <span className={styles.cardIcon}>üö™</span>
                                        –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                                    </h2>
                                </div>
                                <p className={styles.logoutText}>
                                    –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π —Å–µ–∞–Ω—Å —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–±–∞–Ω–∫–∏–Ω–≥–æ–º
                                </p>
                                <button className={styles.logoutButton} onClick={() => dispatch(logout())}>
                                    <span className={styles.logoutIcon}>üö™</span>
                                    –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                                </button>
                            </section>
                        </div>
                    </div>
                </main>
            </div>

            {/* –ü–æ–ø–∞–ø –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
            {showPersonalInfo && (
                <div className={styles.modalOverlay} onClick={handleCloseModal}>
                    <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>
                        <div className={styles.modalHeader}>
                            <h2 className={styles.modalTitle}>
                                <span className={styles.modalIcon}>üìÑ</span>
                                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                            </h2>
                            <button
                                className={styles.modalClose}
                                onClick={handleCloseModal}
                            >
                                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                                </svg>
                            </button>
                        </div>

                        <div className={styles.modalBody}>
                            {activeTab === 'view' ? (
                                <div className={styles.viewTab}>
                                    <div className={styles.infoGrid}>
                                        <div className={styles.infoItem}>
                                            <div className={styles.infoLabel}>–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞</div>
                                            <div className={styles.infoValue}>1234 567890</div>
                                        </div>
                                        <div className={styles.infoItem}>
                                            <div className={styles.infoLabel}>–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è</div>
                                            <div className={styles.infoValue}>–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –∫–≤. 45</div>
                                        </div>
                                        <div className={styles.infoItem}>
                                            <div className={styles.infoLabel}>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</div>
                                            <div className={styles.infoValue}>15 –º–∞—è 1990</div>
                                        </div>
                                        <div className={styles.infoItem}>
                                            <div className={styles.infoLabel}>–°—Ç–∞—Ç—É—Å –∑–∞–Ω—è—Ç–æ—Å—Ç–∏</div>
                                            <div className={styles.infoValue}>–†–∞–±–æ—Ç–∞—é</div>
                                        </div>
                                    </div>
                                    <div className={styles.modalFooter}>
                                        <button
                                            className={styles.editInfoButton}
                                            onClick={handleEditClick}
                                        >
                                            <span>–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</span>
                                            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13" stroke="currentColor" strokeWidth="2" />
                                                <path d="M18.5 2.5C18.8978 2.10217 19.4374 1.87868 20 1.87868C20.5626 1.87868 21.1022 2.10217 21.5 2.5C21.8978 2.89782 22.1213 3.43739 22.1213 4C22.1213 4.56261 21.8978 5.10217 21.5 5.5L12 15L8 16L9 12L18.5 2.5Z" stroke="currentColor" strokeWidth="2" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            ) : (
                                <div className={styles.editTab}>
                                    <div className={styles.formGrid}>
                                        <div className={styles.formGroup}>
                                            <label className={styles.formLabel}>
                                                –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
                                            </label>
                                            <input
                                                type="text"
                                                name="passport_number"
                                                value={personalInfo.passport_number}
                                                onChange={handlePersonalInfoChange}
                                                className={styles.formInput}
                                                placeholder="1234 567890"
                                            />
                                        </div>

                                        <div className={styles.formGroup}>
                                            <label className={styles.formLabel}>
                                                –ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
                                            </label>
                                            <textarea
                                                name="address"
                                                value={personalInfo.address}
                                                onChange={handlePersonalInfoChange}
                                                className={styles.formTextarea}
                                                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å"
                                                rows="3"
                                            />
                                        </div>

                                        <div className={styles.formGroup}>
                                            <label className={styles.formLabel}>
                                                –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
                                            </label>
                                            <input
                                                type="date"
                                                name="birth_date"
                                                value={personalInfo.birth_date}
                                                onChange={handlePersonalInfoChange}
                                                className={styles.formInput}
                                            />
                                        </div>

                                        <div className={styles.formGroup}>
                                            <label className={styles.formLabel}>
                                                –°—Ç–∞—Ç—É—Å –∑–∞–Ω—è—Ç–æ—Å—Ç–∏
                                            </label>
                                            <div className={styles.customSelect}>
                                                <select
                                                    name="employment_status"
                                                    value={personalInfo.employment_status}
                                                    onChange={handlePersonalInfoChange}
                                                    className={styles.formSelect}
                                                >
                                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å</option>
                                                    <option value="–†–∞–±–æ—Ç–∞—é">–†–∞–±–æ—Ç–∞—é</option>
                                                    <option value="–°—Ç—É–¥–µ–Ω—Ç">–°—Ç—É–¥–µ–Ω—Ç</option>
                                                    <option value="–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä">–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä</option>
                                                    <option value="–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π">–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π</option>
                                                    <option value="–§—Ä–∏–ª–∞–Ω—Å–µ—Ä">–§—Ä–∏–ª–∞–Ω—Å–µ—Ä</option>
                                                    <option value="–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å">–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å</option>
                                                </select>
                                                <div className={styles.selectArrow}>
                                                    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <path d="M6 9L12 15L18 9" stroke="currentColor" strokeWidth="2" />
                                                    </svg>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div className={styles.modalFooter}>
                                        <button
                                            className={styles.cancelButton}
                                            onClick={handleCancelEdit}
                                        >
                                            –û—Ç–º–µ–Ω–∞
                                        </button>
                                        <button
                                            className={styles.saveButton}
                                            onClick={handleSavePersonalInfo}
                                        >
                                            –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                                        </button>
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Profile;