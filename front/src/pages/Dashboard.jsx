import React, { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import { NavLink } from 'react-router-dom';
import styles from '../styles/dashboard.module.css';

const Dashboard = () => {
    const [quickAmount, setQuickAmount] = useState('');
    const [selectedCardIndex, setSelectedCardIndex] = useState(0);

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Redux
    const user = useSelector(state => state.auth);
    const accounts = useSelector(state => state.accounts.list || []);
    const cards = useSelector(state => state.cards.cards || []);
    const loans = useSelector(state => state.loans.list || []);
    const transactions = useSelector(state => state.transactions.list || []);

    const cardsWithAccounts = cards.map(card => ({
        ...card,
        account: accounts.find(acc => acc.id === card.account_id)
    }));


    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalBalance = accounts.reduce((sum, acc) => sum + (acc.balance || 0), 0);
    const activeCards = cardsWithAccounts.filter(card => card.is_active);
    const activeLoans = loans.filter(loan => !loan.is_paid);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ –º–µ—Å—è—Ü–∞–º –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤
    const currentMonth = new Date().getMonth();
    const currentYear = new Date().getFullYear();

    const monthlyTransactions = transactions.filter(t => {
        const transDate = new Date(t.created_at);
        return transDate.getMonth() === currentMonth &&
            transDate.getFullYear() === currentYear &&
            t.status === 'completed';
    });

    const monthlyIncome = monthlyTransactions
        .filter(t => ['deposit', 'transfer'].includes(t.transaction_type) && t.amount > 0)
        .reduce((sum, t) => sum + t.amount, 0);

    const monthlyExpenses = monthlyTransactions
        .filter(t => ['withdraw', 'loan_payment'].includes(t.transaction_type))
        .reduce((sum, t) => sum + t.amount, 0);

    const monthlySavings = monthlyIncome - monthlyExpenses;

    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const recentTransactions = [...transactions]
        .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
        .slice(0, 4);

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã
    const formatAmount = (amount) => {
        return new Intl.NumberFormat('ru-RU', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        }).format(amount);
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    const formatTime = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleTimeString('ru-RU', {
            hour: '2-digit',
            minute: '2-digit'
        });
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const today = new Date();
        const yesterday = new Date(today);
        yesterday.setDate(yesterday.getDate() - 1);

        if (date.toDateString() === today.toDateString()) {
            return '–°–µ–≥–æ–¥–Ω—è';
        } else if (date.toDateString() === yesterday.toDateString()) {
            return '–í—á–µ—Ä–∞';
        } else {
            return date.toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'short'
            });
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const getTransactionIcon = (type) => {
        const icons = {
            deposit: 'üí∞',
            withdraw: 'üí∏',
            transfer: 'üîÑ',
            loan_payment: 'üè¶'
        };
        return icons[type] || 'üí≥';
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const getTransactionName = (transaction) => {
        const names = {
            deposit: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞',
            withdraw: '–°–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤',
            transfer: '–ü–µ—Ä–µ–≤–æ–¥',
            loan_payment: '–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞'
        };
        return transaction.description || names[transaction.transaction_type] || '–û–ø–µ—Ä–∞—Ü–∏—è';
    };

    // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    const quickActions = [
        { id: 1, icon: 'üîÑ', label: '–ü–µ—Ä–µ–≤–æ–¥', description: '–ú–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏', link: '/accounts' },
        { id: 2, icon: 'üí≥', label: '–ö–∞—Ä—Ç—ã', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–∞–º–∏', link: '/accounts' },
        { id: 3, icon: 'üí∞', label: '–ö—Ä–µ–¥–∏—Ç—ã', description: '–ú–æ–∏ –∫—Ä–µ–¥–∏—Ç—ã', link: '/loans' },
        { id: 4, icon: 'üìÑ', label: '–ò—Å—Ç–æ—Ä–∏—è', description: '–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', link: '/transfers' }
    ];

    const quickAmounts = ['500', '1000', '2000', '5000'];

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const stats = [
        {
            label: '–î–æ—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü',
            value: `${formatAmount(monthlyIncome)} ‚ÇΩ`,
            change: monthlyIncome > 0 ? '+' : '',
            trend: 'up'
        },
        {
            label: '–†–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü',
            value: `${formatAmount(monthlyExpenses)} ‚ÇΩ`,
            change: monthlyExpenses > 0 ? '+' : '',
            trend: 'up'
        },
        {
            label: '–≠–∫–æ–Ω–æ–º–∏—è',
            value: `${formatAmount(monthlySavings)} ‚ÇΩ`,
            change: monthlySavings > 0 ? '+' : '',
            trend: monthlySavings > 0 ? 'up' : 'down'
        },
        {
            label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç',
            value: activeCards.length.toString(),
            change: '',
            trend: 'up'
        }
    ];

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∫–∞—Ä—Ç—ã
    const getCardColor = (index) => {
        const colors = [
            'linear-gradient(135deg, #3b82f6, #1d4ed8)',
            'linear-gradient(135deg, #10b981, #059669)',
            'linear-gradient(135deg, #f59e0b, #d97706)',
            'linear-gradient(135deg, #8b5cf6, #6366f1)'
        ];
        return colors[index % colors.length];
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
    const formatCardNumber = (number) => {
        return number.replace(/(\d{4})/g, '$1 ').trim();
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∫–∞—Ä—Ç—ã
    const formatCardDate = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            month: '2-digit',
            year: '2-digit'
        });
    };

    return (
        <div className={styles.dashboardContainer}>
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
            <div className={styles.background}>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
                <div className={styles.gradientBlob}></div>
            </div>

            <div className={styles.dashboardContent}>
                {/* –•–µ–¥–µ—Ä */}
                <header className={styles.dashboardHeader}>
                    <div className={styles.headerMain}>
                        <div className={styles.welcomeSection}>
                            <h1 className={styles.welcomeTitle}>
                                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <span className={styles.userName}>{user.first_name}</span>!
                            </h1>
                            <p className={styles.welcomeSubtitle}>
                                –í–æ—Ç –æ–±–∑–æ—Ä –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                            </p>
                        </div>
                        <div className={styles.dateSection}>
                            <div className={styles.currentDate}>
                                {new Date().toLocaleDateString('ru-RU', {
                                    weekday: 'long',
                                    year: 'numeric',
                                    month: 'long',
                                    day: 'numeric'
                                })}
                            </div>
                            <div className={styles.notificationBell}>üîî</div>
                        </div>
                    </div>
                </header>

                {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
                <main className={styles.dashboardMain}>
                    <div className={styles.contentGrid}>
                        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ë–∞–ª–∞–Ω—Å –∏ –∫–∞—Ä—Ç—ã */}
                        <div className={styles.leftColumn}>
                            {/* –û–±—â–∏–π –±–∞–ª–∞–Ω—Å */}
                            <section className={styles.balanceCard}>
                                <div className={styles.balanceHeader}>
                                    <h2 className={styles.balanceTitle}>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</h2>
                                    <div className={styles.balanceTrend}>
                                        {accounts.length} {accounts.length === 1 ? '—Å—á–µ—Ç' : '—Å—á–µ—Ç–æ–≤'}
                                    </div>
                                </div>
                                <div className={styles.balanceAmount}>
                                    {formatAmount(totalBalance)} ‚ÇΩ
                                </div>
                                <div className={styles.balanceStats}>
                                    <div className={styles.balanceStat}>
                                        <span className={styles.statLabel}>–î–æ—Ö–æ–¥—ã</span>
                                        <span className={styles.statValue}>{formatAmount(monthlyIncome)} ‚ÇΩ</span>
                                    </div>
                                    <div className={styles.balanceStat}>
                                        <span className={styles.statLabel}>–†–∞—Å—Ö–æ–¥—ã</span>
                                        <span className={styles.statValue}>{formatAmount(monthlyExpenses)} ‚ÇΩ</span>
                                    </div>
                                    <div className={styles.balanceStat}>
                                        <span className={styles.statLabel}>–≠–∫–æ–Ω–æ–º–∏—è</span>
                                        <span className={styles.statValue}>{formatAmount(monthlySavings)} ‚ÇΩ</span>
                                    </div>
                                </div>
                            </section>

                            {/* –ö–∞—Ä—Ç—ã */}
                            <section className={styles.cardsSection}>
                                <div className={styles.sectionHeader}>
                                    <h2 className={styles.sectionTitle}>–ú–æ–∏ –∫–∞—Ä—Ç—ã</h2>
                                    <NavLink to="/accounts" className={styles.addCardButton}>
                                        + –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                                    </NavLink>
                                </div>
                                <div className={styles.cardsContainer}>
                                    {activeCards.length === 0 ? (
                                        <div className={styles.emptyCards}>
                                            <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç</p>
                                            <NavLink to="/accounts" className={styles.addCardButton}>
                                                –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É
                                            </NavLink>
                                        </div>
                                    ) : (
                                        activeCards.slice(0, 3).map((card, index) => (
                                            <div
                                                key={card.id}
                                                className={`${styles.cardItem} ${index === selectedCardIndex ? styles.cardActive : ''}`}
                                                onClick={() => setSelectedCardIndex(index)}
                                            >
                                                <div className={styles.cardBackground} style={{ background: getCardColor(index) }}>
                                                    <div className={styles.cardContent}>
                                                        <div className={styles.cardHeader}>
                                                            <div className={styles.cardType}>
                                                                {card.card_type}
                                                            </div>
                                                            <div className={styles.cardChip}>‚óò‚óò‚óò‚óò</div>
                                                        </div>
                                                        <div className={styles.cardNumber}>
                                                            ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ {card.card_number.slice(-4)}
                                                        </div>
                                                        <div className={styles.cardFooter}>
                                                            <div className={styles.cardHolder}>
                                                                <div className={styles.holderLabel}>–í–ª–∞–¥–µ–ª–µ—Ü</div>
                                                                <div className={styles.holderName}>
                                                                    {user.first_name} {user.last_name}
                                                                </div>
                                                            </div>
                                                            <div className={styles.cardExpiry}>
                                                                <div className={styles.expiryLabel}>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è</div>
                                                                <div className={styles.expiryDate}>
                                                                    {formatCardDate(card.expiration_date)}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div className={styles.cardBalance}>
                                                    –ë–∞–ª–∞–Ω—Å: {formatAmount(card.account ? card.account.balance : 0)} ‚ÇΩ
                                                </div>
                                            </div>
                                        ))
                                    )}
                                </div>
                            </section>
                        </div>

                        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                        <div className={styles.centerColumn}>
                            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                            <section className={styles.quickActions}>
                                <h2 className={styles.sectionTitle}>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
                                <div className={styles.actionsGrid}>
                                    {quickActions.map((action) => (
                                        <NavLink
                                            key={action.id}
                                            to={action.link}
                                            className={styles.actionButton}
                                        >
                                            <div className={styles.actionIcon}>{action.icon}</div>
                                            <div className={styles.actionInfo}>
                                                <div className={styles.actionLabel}>{action.label}</div>
                                                <div className={styles.actionDescription}>{action.description}</div>
                                            </div>
                                        </NavLink>
                                    ))}
                                </div>
                            </section>

                            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—Ä–µ–¥–∏—Ç–æ–≤ */}
                            {activeLoans.length > 0 && (
                                <section className={styles.quickTransfer}>
                                    <h2 className={styles.sectionTitle}>–ê–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã</h2>
                                    <div className={styles.transferCard}>
                                        {activeLoans.slice(0, 2).map(loan => {
                                            const totalAmount = loan.amount * (1 + loan.interest_rate / 100);
                                            const remaining = totalAmount - (loan.paid_amount || 0);
                                            return (
                                                <div key={loan.id} className={styles.loanItem}>
                                                    <div className={styles.loanInfo}>
                                                        <div className={styles.loanName}>
                                                            –ö—Ä–µ–¥–∏—Ç {formatAmount(loan.amount)} ‚ÇΩ
                                                        </div>
                                                        <div className={styles.loanStatus}>
                                                            –û—Å—Ç–∞–ª–æ—Å—å: {formatAmount(remaining)} ‚ÇΩ
                                                        </div>
                                                    </div>
                                                    <NavLink to="/loans" className={styles.loanAction}>
                                                        ‚Üí
                                                    </NavLink>
                                                </div>
                                            );
                                        })}
                                        <NavLink to="/loans" className={styles.transferButton}>
                                            –í—Å–µ –∫—Ä–µ–¥–∏—Ç—ã
                                        </NavLink>
                                    </div>
                                </section>
                            )}
                        </div>

                        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ */}
                        <div className={styles.rightColumn}>
                            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                            <section className={styles.statsSection}>
                                <h2 className={styles.sectionTitle}>–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
                                <div className={styles.statsGrid}>
                                    {stats.map((stat, index) => (
                                        <div key={index} className={styles.statCard}>
                                            <div className={styles.statHeader}>
                                                <span className={styles.statLabel}>{stat.label}</span>
                                                {stat.change && (
                                                    <span className={`${styles.statChange} ${styles[stat.trend]}`}>
                                                        {stat.change}
                                                    </span>
                                                )}
                                            </div>
                                            <div className={styles.statValue}>{stat.value}</div>
                                            <div className={styles.statChart}>
                                                <div
                                                    className={styles.chartBar}
                                                    style={{
                                                        height: `${60 + index * 10}%`,
                                                        background: stat.trend === 'up'
                                                            ? 'linear-gradient(90deg, #10b981, #059669)'
                                                            : 'linear-gradient(90deg, #ef4444, #dc2626)'
                                                    }}
                                                ></div>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </section>

                            {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ */}
                            <section className={styles.transactionsSection}>
                                <div className={styles.sectionHeader}>
                                    <h2 className={styles.sectionTitle}>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h2>
                                    <NavLink to="/transfers" className={styles.viewAllButton}>
                                        –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Üí
                                    </NavLink>
                                </div>
                                <div className={styles.transactionsList}>
                                    {recentTransactions.length === 0 ? (
                                        <div className={styles.emptyTransactions}>
                                            <p>–ü–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</p>
                                        </div>
                                    ) : (
                                        recentTransactions.map((transaction) => (
                                            <div key={transaction.id} className={styles.transactionItem}>
                                                <div className={styles.transactionIcon}>
                                                    <span>{getTransactionIcon(transaction.transaction_type)}</span>
                                                </div>
                                                <div className={styles.transactionInfo}>
                                                    <div className={styles.transactionName}>
                                                        {getTransactionName(transaction)}
                                                    </div>
                                                    <div className={styles.transactionTime}>
                                                        {formatDate(transaction.created_at)}, {formatTime(transaction.created_at)}
                                                    </div>
                                                </div>
                                                <div className={styles.transactionAmount}>
                                                    <span className={`${styles.amount} ${['deposit'].includes(transaction.transaction_type)
                                                        ? styles.income
                                                        : styles.outcome
                                                        }`}>
                                                        {['deposit'].includes(transaction.transaction_type) ? '+' : '-'}
                                                        {formatAmount(transaction.amount)} ‚ÇΩ
                                                    </span>
                                                </div>
                                            </div>
                                        ))
                                    )}
                                </div>
                            </section>

                            {/* –ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è */}
                            <section className={styles.paymentsSection}>
                                <h2 className={styles.sectionTitle}>–ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                                <div className={styles.paymentsList}>
                                    <div className={styles.paymentItem}>
                                        <div className={styles.paymentIcon}>üí≥</div>
                                        <div className={styles.paymentInfo}>
                                            <div className={styles.paymentName}>–°—á–µ—Ç–æ–≤</div>
                                            <div className={styles.paymentDate}>{accounts.length}</div>
                                        </div>
                                        <NavLink to="/accounts" className={styles.paymentAction}>‚Üí</NavLink>
                                    </div>
                                    <div className={styles.paymentItem}>
                                        <div className={styles.paymentIcon}>üè¶</div>
                                        <div className={styles.paymentInfo}>
                                            <div className={styles.paymentName}>–ö—Ä–µ–¥–∏—Ç–æ–≤</div>
                                            <div className={styles.paymentDate}>{activeLoans.length}</div>
                                        </div>
                                        <NavLink to="/loans" className={styles.paymentAction}>‚Üí</NavLink>
                                    </div>
                                    <div className={styles.paymentItem}>
                                        <div className={styles.paymentIcon}>üìä</div>
                                        <div className={styles.paymentInfo}>
                                            <div className={styles.paymentName}>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</div>
                                            <div className={styles.paymentDate}>{transactions.length}</div>
                                        </div>
                                        <NavLink to="/transfers" className={styles.paymentAction}>‚Üí</NavLink>
                                    </div>
                                </div>
                            </section>
                        </div>
                    </div>
                </main>
            </div>
        </div>
    );
};

export default Dashboard;