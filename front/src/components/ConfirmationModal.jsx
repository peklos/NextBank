import React from 'react';
import styles from '../styles/accounts.module.css';

const ConfirmationModal = ({ type, isOpen, account, accounts, onClose, onConfirm }) => {
    if (!isOpen) return null;

    const getAccountInfo = (account, accounts) => {
        if (!account || !accounts) return { color: '#3b82f6', icon: 'üí≥' };
        
        const index = accounts.findIndex(acc => acc.id === account.id);
        const colors = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444', '#06b6d4'];
        const icons = ['üí≥', 'üí∞', 'üè¶', 'üíé', 'üìà', 'üíµ'];

        return {
            icon: icons[index % icons.length],
            color: colors[index % colors.length],
        };
    };

    const formatAccountNumber = (number) => {
        if (!number) return '';
        return number.slice(0, 4) + ' ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ' + number.slice(-4);
    };

    const modalConfigs = {
        createAccount: {
            icon: 'üè¶',
            title: '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞',
            confirmIcon: '‚ùì',
            confirmTitle: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Å—á–µ—Ç?',
            confirmDescription: '–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.',
            showFooter: true,
            confirmText: '–î–∞, —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç'
        },
        createSuccess: {
            icon: '‚úÖ',
            title: '–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞',
            confirmIcon: 'üéâ',
            confirmTitle: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –±—ã–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞',
            confirmDescription: '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å—á–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.',
            showFooter: false,
            confirmText: '–ü–æ–Ω—è—Ç–Ω–æ'
        },
        deleteAccount: {
            icon: 'üóëÔ∏è',
            title: '–£–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞',
            confirmIcon: '‚ö†Ô∏è',
            confirmTitle: '–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç?',
            confirmDescription: '–í–º–µ—Å—Ç–µ —Å –Ω–∏–º —É–¥–∞–ª—è—Ç—Å—è –∏ –æ–±–Ω—É–ª—è—Ç—Å—è –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —ç—Ç–æ–º—É —Å—á–µ—Ç—É. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.',
            showFooter: true,
            confirmText: '–î–∞, —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç',
            isDanger: true
        },
        deleteSuccess: {
            icon: '‚úÖ',
            title: '–ó–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
            confirmIcon: 'üì®',
            confirmTitle: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
            confirmDescription: '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å—á–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.',
            showFooter: false,
            confirmText: '–ü–æ–Ω—è—Ç–Ω–æ'
        }
    };

    const config = modalConfigs[type] || modalConfigs.createAccount;
    const accountInfo = getAccountInfo(account, accounts);

    return (
        <div className={styles.modalOverlay}>
            <div className={styles.modalContent}>
                <div className={styles.modalHeader}>
                    <h2 className={styles.modalTitle}>
                        <span className={styles.modalIcon}>{config.icon}</span>
                        {config.title}
                    </h2>
                    <button className={styles.modalClose} onClick={onClose}>
                        <svg viewBox="0 0 24 24" fill="none">
                            <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" />
                        </svg>
                    </button>
                </div>

                <div className={styles.modalBody}>
                    <div className={styles.confirmContent}>
                        <div 
                            className={styles.confirmIcon} 
                            style={type === 'deleteAccount' ? { color: '#ef4444' } : {}}
                        >
                            {config.confirmIcon}
                        </div>
                        <h3 className={styles.confirmTitle}>
                            {config.confirmTitle}
                        </h3>
                        <p className={styles.confirmDescription}>
                            {config.confirmDescription}
                        </p>

                        {type === 'deleteAccount' && account && (
                            <div className={styles.accountPreview}>
                                <div 
                                    className={styles.accountPreviewIcon} 
                                    style={{ backgroundColor: accountInfo.color }}
                                >
                                    <span>{accountInfo.icon}</span>
                                </div>
                                <div className={styles.accountPreviewInfo}>
                                    <span className={styles.accountPreviewName}>–°—á–µ—Ç {account.id}</span>
                                    <span className={styles.accountPreviewNumber}>
                                        {formatAccountNumber(account.account_number)}
                                    </span>
                                </div>
                            </div>
                        )}
                    </div>

                    {config.showFooter && (
                        <div className={styles.modalFooter}>
                            <button className={styles.cancelButton} onClick={onClose}>
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button 
                                className={`${styles.saveButton} ${config.isDanger ? styles.dangerButton : ''}`}
                                onClick={onConfirm}
                            >
                                {config.confirmText}
                            </button>
                        </div>
                    )}

                    {!config.showFooter && (
                        <div className={styles.modalFooter}>
                            <button className={styles.saveButton} onClick={onClose}>
                                {config.confirmText}
                            </button>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default ConfirmationModal;